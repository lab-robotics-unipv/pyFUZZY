#ifndef FUZZY_LOGIC_H
#define FUZZY_LOGIC_H

#include "definitions.h"

#include "rules.h"
#include "fuzzyInput.h"
#include "fuzzyOutput.h"

#define MIN(x, y) (x < y ? x : y)
#define MAX(x, y) (x > y ? x : y)

//! FUZZY LOGIC STRUCTURE
typedef struct {
	fuzzyInput fInput[N_INPUT];
	fuzzyOutput fOutput[N_OUTPUT];
	builtRule rules[N_RULES];
	double fuzzified[N_INPUT * MAX_N_MF];
	double evaluated[N_OUTPUT * MAX_N_MF];
} fuzzyLogic;

/*! CONSTRUCTOR OF THE FUZZY LOGIC
 *		output			fl			Fuzzy logic to init
 *		input			inputs		Vector of inputs of the logic
 *		input			outputs		Vector of outputs of the logic
 *		input			rules		Vector of rules to add to the logic
 *
 *		return						Flag: -1 if error, 0 otherwise
 */
int createLogic(fuzzyLogic * fl, fuzzyInput * inputs, fuzzyOutput * outputs, rule * r);

// /*! DEALLOCATION OF A MEMBER FUNCTION
//  *			input		fl				Fuzzy logic
//  */
// void killLogic(fuzzyLogic * fl);
//
// /*! ADD RULES TO THE FUZZY LOGIC
//  *		input/output	fl			Fuzzy logic
//  *		input			r			Vector of rules to add
//  *
//  *		return						-1 if smtg went wrong, else 0
//  */
// int addRules(fuzzyLogic * fl, rule * r);

/*! FUZZIFY THE INPUTS
 *		input/output	fl					Fuzzy logic
 *		input			inputs				Inputs of the fuzzy logic			
 */
void fuzzify(fuzzyLogic * fl, double * inputs);

/*! EVALUATE THE RULES GIVEN THE FUZZIFIED INPUTS
 *		input/output		fl			Fuzzy logic
 *
 *		return							-1 if smtg went wrong, 0 otherwise
 */
int evaluateRules(fuzzyLogic * fl);

/*! DEFUZZIFY THE EVALUATED RULES
 *		input			fl				Fuzzy logic
 *		output			outputs			Vector of the outputs of the fuzzy control
 *
 *		return							-1 if smtg went wrong, 0 otherwise
 */
int defuzzify(fuzzyLogic * fl, double * outputs);

/*! FIND INPUT INDEX GIVEN NAME
 *		input			fl				Fuzzy logic
 *		input			name			Name of the input
 *
 *		return							Index of the input or -1 if not found
 */
int getInputFromName(fuzzyLogic * fl, char * name);

/*! FIND OUTPUT INDEX GIVEN NAME
 *		input			fl				Fuzzy logic
 *		input			name			Name of the output
 *
 *		return							Index of the output or -1 if not found
 */
int getOutputFromName(fuzzyLogic * fl, char * name);

#endif

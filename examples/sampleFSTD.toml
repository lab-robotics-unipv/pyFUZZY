[[model]]
	name = "test"
	description = "Standard Fuzzy Logic for test"
	version = "1.0alpha"
	type = "f-std"

	[[model.input_var]]
		name = "A"
		description = "A"

		[[model.input_var.mf]]
			name = "neg"
			type = "pairwise-linear"
			parameters = [[-5.0, 1.0], [0.0, 0.0]]

		[[model.input_var.mf]]
			name = "zero"
			type = "triangle"
			parameters = [-5.0, 0.0, 5.0]

		[[model.input_var.mf]]
			name = "pos"
			type = "pairwise-linear"
			parameters = [[0.0, 0.0], [5.0, 1.0]]

	[[model.input_var]]
		name = "B"
		description = "B"

		[[model.input_var.mf]]
			name = "neg"
			type = "pairwise-linear"
			parameters = [[-1.0, 1.0], [0.0, 0.0]]

		[[model.input_var.mf]]
			name = "zero"
			type = "triangle"
			parameters = [-1.0, 0.0, 1.0]

		[[model.input_var.mf]]
			name = "pos"
			type = "pairwise-linear"
			parameters = [[0.0, 0.0], [1.0, 1.0]]

	[[model.output_var]]
		name = "C"
		description = "C"

		[[model.output_var.mf]]
			name = "neg"
			type = "pairwise-linear"
			parameters = [[-1.0, 1.0], [0.0, 0.0]]

		[[model.output_var.mf]]
			name = "zero"
			type = "triangle"
			parameters = [-1.0, 0.0, 1.0]

		[[model.output_var.mf]]
			name = "pos"
			type = "pairwise-linear"
			parameters = [[0.0, 0.0], [1.0, 1.0]]
	
	[model.rules]
		rules = [
			"if (A is neg) and (diffDer is neg) then (vel_ang is pos) with 1",
			"if (A is neg) and (diffDer is zero) then (vel_ang is pos) with 1",
			"if (A is neg) and (diffDer is pos) then (vel_ang is zero) with 1",
			"if (A is zero) and (diffDer is neg) then (vel_ang is pos) with 1",
			"if (A is zero) and (diffDer is zero) then (vel_ang is zero) with 1",
			"if (A is zero) and (diffDer is pos) then (vel_ang is neg) with 1",
			"if (A is pos) and (diffDer is neg) then (vel_ang is zero) with 1",
			"if (A is pos) and (diffDer is zero) then (vel_ang is neg) with 1",
			"if (A is pos) and (diffDer is pos) then (vel_ang is neg) with 1",
		]
		and = "multiply"
		then = "max"
